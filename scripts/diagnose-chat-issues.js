// Script de diagn√≥stico detalhado para problemas do chat
const PRODUCTION_URL = 'https://seahorse-app-k5pag.ondigitalocean.app';

async function diagnoseChatIssues() {
  console.log('üîç Diagn√≥stico Detalhado do Chat em Produ√ß√£o\n');
  console.log('=' .repeat(60));
  
  const diagnostics = {
    infrastructure: {
      pageLoad: false,
      authentication: false,
      apiEndpoints: false,
      staticAssets: false
    },
    chatSpecific: {
      modelsAvailable: false,
      streamingSupport: false,
      errorHandling: false
    },
    possibleIssues: [],
    recommendations: []
  };

  // 1. Verificar infraestrutura b√°sica
  console.log('\n1. VERIFICANDO INFRAESTRUTURA');
  console.log('-' .repeat(40));
  
  // Teste de p√°gina de login
  try {
    const loginTest = await fetch(`${PRODUCTION_URL}/auth/signin`);
    console.log(`‚úì P√°gina de login: ${loginTest.status === 200 ? '‚úÖ OK' : '‚ùå ERRO'}`);
    diagnostics.infrastructure.pageLoad = loginTest.status === 200;
    
    const loginHtml = await loginTest.text();
    
    // Verificar se h√° mensagens de erro no HTML
    if (loginHtml.includes('NEXTAUTH_URL')) {
      diagnostics.possibleIssues.push('NEXTAUTH_URL pode estar mal configurado');
    }
    if (loginHtml.includes('NEXTAUTH_SECRET')) {
      diagnostics.possibleIssues.push('NEXTAUTH_SECRET pode estar faltando');
    }
    if (loginHtml.includes('DATABASE_URL')) {
      diagnostics.possibleIssues.push('Problema de conex√£o com banco de dados');
    }
  } catch (error) {
    console.log('‚úì P√°gina de login: ‚ùå ERRO DE REDE');
    diagnostics.possibleIssues.push(`Erro ao acessar p√°gina de login: ${error.message}`);
  }

  // Teste de API Health
  try {
    const healthTest = await fetch(`${PRODUCTION_URL}/api/health`);
    console.log(`‚úì API Health Check: ${healthTest.status === 200 ? '‚úÖ OK' : '‚ùå ERRO'}`);
    diagnostics.infrastructure.apiEndpoints = healthTest.status === 200;
  } catch (error) {
    console.log('‚úì API Health Check: ‚ùå ERRO');
  }

  // 2. Verificar endpoints espec√≠ficos do chat
  console.log('\n2. VERIFICANDO ENDPOINTS DO CHAT');
  console.log('-' .repeat(40));
  
  // Teste do endpoint de chat (deve retornar 401 sem auth)
  try {
    const chatTest = await fetch(`${PRODUCTION_URL}/api/chat/stream`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        messages: [{ role: 'user', content: 'test' }],
        model: 'gpt-3.5-turbo'
      })
    });
    
    console.log(`‚úì Endpoint /api/chat/stream: ${chatTest.status === 401 ? '‚úÖ Protegido' : `‚ùå Status ${chatTest.status}`}`);
    
    if (chatTest.status !== 401) {
      const response = await chatTest.json();
      console.log('  Resposta inesperada:', response);
      diagnostics.possibleIssues.push('Endpoint de chat pode estar mal configurado');
    }
  } catch (error) {
    console.log('‚úì Endpoint /api/chat/stream: ‚ùå ERRO');
    diagnostics.possibleIssues.push(`Erro no endpoint de chat: ${error.message}`);
  }

  // 3. Poss√≠veis problemas de configura√ß√£o
  console.log('\n3. AN√ÅLISE DE POSS√çVEIS PROBLEMAS');
  console.log('-' .repeat(40));
  
  // Baseado nos testes, identificar problemas
  if (!diagnostics.infrastructure.pageLoad) {
    diagnostics.possibleIssues.push('Aplica√ß√£o pode n√£o estar rodando corretamente');
    diagnostics.recommendations.push('Verificar logs de deploy no DigitalOcean');
  }

  // Listar problemas comuns
  console.log('\nüî¥ PROBLEMAS COMUNS EM PRODU√á√ÉO:');
  console.log('1. Vari√°veis de ambiente faltando ou incorretas');
  console.log('2. Banco de dados inacess√≠vel ou sem migra√ß√µes');
  console.log('3. API Keys de IA n√£o configuradas');
  console.log('4. CORS ou problemas de autentica√ß√£o');
  console.log('5. Limites de rate limiting ou quota');

  // 4. Verifica√ß√£o espec√≠fica de IA
  console.log('\n4. VERIFICA√á√ÉO DE CONFIGURA√á√ÉO DE IA');
  console.log('-' .repeat(40));
  console.log('‚ö†Ô∏è  N√£o √© poss√≠vel verificar diretamente sem autentica√ß√£o');
  console.log('Verifica√ß√µes necess√°rias no painel do DigitalOcean:');
  console.log('- OPENAI_API_KEY est√° configurada?');
  console.log('- OPENROUTER_API_KEY est√° configurada?');
  console.log('- Alguma das chaves est√° v√°lida e com cr√©ditos?');

  // 5. Recomenda√ß√µes espec√≠ficas
  console.log('\n5. A√á√ïES RECOMENDADAS');
  console.log('-' .repeat(40));
  console.log('1Ô∏è‚É£  Verificar logs do aplicativo:');
  console.log('   doctl apps logs <app-id> --type=run');
  console.log('\n2Ô∏è‚É£  Verificar vari√°veis de ambiente:');
  console.log('   - NEXTAUTH_URL = https://seahorse-app-k5pag.ondigitalocean.app');
  console.log('   - NEXTAUTH_SECRET configurado');
  console.log('   - DATABASE_URL e DIRECT_URL corretos');
  console.log('   - OPENAI_API_KEY ou OPENROUTER_API_KEY v√°lidas');
  console.log('\n3Ô∏è‚É£  Testar localmente com as mesmas vari√°veis:');
  console.log('   Copie as vari√°veis de produ√ß√£o para .env.local e teste');
  console.log('\n4Ô∏è‚É£  Verificar banco de dados:');
  console.log('   - Migrations aplicadas: npx prisma migrate deploy');
  console.log('   - Conex√£o funcionando: npx prisma db pull');

  // 6. Script de teste manual
  console.log('\n6. TESTE MANUAL DO CHAT');
  console.log('-' .repeat(40));
  console.log('Para testar o chat manualmente:');
  console.log('1. Acesse: https://seahorse-app-k5pag.ondigitalocean.app');
  console.log('2. Fa√ßa login com suas credenciais');
  console.log('3. Navegue para /dashboard/chat');
  console.log('4. Abra o Console do navegador (F12)');
  console.log('5. Tente enviar uma mensagem');
  console.log('6. Observe erros no Console e na aba Network');
  
  // Resumo final
  console.log('\n' + '=' .repeat(60));
  console.log('üìä RESUMO DO DIAGN√ìSTICO');
  console.log('=' .repeat(60));
  
  if (diagnostics.possibleIssues.length > 0) {
    console.log('\n‚ùå Poss√≠veis problemas identificados:');
    diagnostics.possibleIssues.forEach((issue, i) => {
      console.log(`   ${i + 1}. ${issue}`);
    });
  } else {
    console.log('\n‚úÖ Infraestrutura b√°sica parece estar funcionando');
    console.log('   O problema pode estar nas configura√ß√µes de IA ou autentica√ß√£o');
  }

  console.log('\nüí° Pr√≥ximos passos:');
  console.log('1. Verificar logs de produ√ß√£o para erros espec√≠ficos');
  console.log('2. Confirmar todas as vari√°veis de ambiente');
  console.log('3. Testar com um usu√°rio real e monitorar console/network');
}

// Executar diagn√≥stico
diagnoseChatIssues();